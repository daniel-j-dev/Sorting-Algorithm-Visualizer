[{"D:\\sorting-algorithm-visualizer\\src\\index.js":"1","D:\\sorting-algorithm-visualizer\\src\\reportWebVitals.js":"2","D:\\sorting-algorithm-visualizer\\src\\App.js":"3","D:\\sorting-algorithm-visualizer\\src\\components\\Controls\\Controls.js":"4","D:\\sorting-algorithm-visualizer\\src\\components\\CodeBlock\\CodeBlock.js":"5","D:\\sorting-algorithm-visualizer\\src\\components\\AlgoVisual\\AlgoVisual.js":"6","D:\\sorting-algorithm-visualizer\\src\\algorithms\\bubbleSort.js":"7","D:\\sorting-algorithm-visualizer\\src\\contexts\\appContext.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1615,"mtime":1607540586000,"results":"12","hashOfConfig":"10"},{"size":1652,"mtime":1607540546000,"results":"13","hashOfConfig":"10"},{"size":149,"mtime":1607406302000,"results":"14","hashOfConfig":"10"},{"size":620,"mtime":1607480588000,"results":"15","hashOfConfig":"10"},{"size":1812,"mtime":1607481008000,"results":"16","hashOfConfig":"10"},{"size":86,"mtime":1607470920000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11ydyx7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\sorting-algorithm-visualizer\\src\\index.js",[],["37","38"],"D:\\sorting-algorithm-visualizer\\src\\reportWebVitals.js",[],"D:\\sorting-algorithm-visualizer\\src\\App.js",["39"],"D:\\sorting-algorithm-visualizer\\src\\components\\Controls\\Controls.js",[],"D:\\sorting-algorithm-visualizer\\src\\components\\CodeBlock\\CodeBlock.js",[],"D:\\sorting-algorithm-visualizer\\src\\components\\AlgoVisual\\AlgoVisual.js",["40","41"],"import { useContext } from \"react\"\r\nimport appContext from \"../../contexts/appContext\"\r\nimport \"./AlgoVisual.css\"\r\n\r\nfunction AlgoVisual() {\r\n  const { values, setValues, settings, setSettings } = useContext(appContext)\r\n\r\n  return (\r\n    <div id=\"AlgoVisual\">\r\n      {values.map((val, index) => (\r\n        <div\r\n          className=\"value\"\r\n          key={index}\r\n          id={index}\r\n          style={{ height: `${(val / settings.maxValue) * 100}%` }} \r\n          //Determining what a bar's height is by what % it is of the maximum value^\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlgoVisual\r\n","D:\\sorting-algorithm-visualizer\\src\\algorithms\\bubbleSort.js",["42"],"const bubbleSort = (array, appContext) => {\r\n  //\"appContext for animations\"\r\n  let ani = [] //For animations\r\n  let swapped = true\r\n  while (swapped) {\r\n    swapped = false\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (array[i] > array[i + 1]) {\r\n        ;[array[i], array[i + 1]] = [array[i + 1], array[i]]\r\n        swapped = true\r\n        ani.push(i) //For animations - indexs of the value we swapped - we only pass i because we know it swaps only with i+1\r\n      }\r\n    }\r\n  }\r\n  bubbleSortAnimations(ani, appContext) //For anmations\r\n  return array\r\n}\r\n\r\nconst bubbleSortAnimations = (ani, { values, setValues, settings }) => {\r\n  let comparedItems = [0, 1]\r\n  let tempArr = [...values]\r\n  for (let i = 0; i < ani.length; i++) {\r\n    let idx1 = ani[i]\r\n    let idx2 = idx1 + 1\r\n    setTimeout(() => {\r\n      //Clear out old comparison colors\r\n      document.getElementById(`${comparedItems[0]}`).style.backgroundColor =\r\n        \"#ffc600\"\r\n      document.getElementById(`${comparedItems[1]}`).style.backgroundColor =\r\n        \"#ffc600\"\r\n\r\n      //Change colors for current comparison items\r\n      comparedItems = [idx1, idx2]\r\n      document.getElementById(`${idx1}`).style.backgroundColor = \"#90ee90\"\r\n      document.getElementById(`${idx2}`).style.backgroundColor = \"#90ee90\"\r\n      ;[tempArr[idx1], tempArr[idx2]] = [tempArr[idx2], tempArr[idx1]]\r\n      setValues([...tempArr])\r\n      //If on last item of loop, change the last two comparison item's colors back to normal\r\n      if (i === ani.length - 1) {\r\n        document.getElementById(`${comparedItems[0]}`).style.backgroundColor =\r\n          \"#ffc600\"\r\n        document.getElementById(`${comparedItems[1]}`).style.backgroundColor =\r\n          \"#ffc600\"\r\n      }\r\n    }, i * settings.AnimationSpeed)\r\n  }\r\n}\r\n\r\nexport default bubbleSort\r\n","D:\\sorting-algorithm-visualizer\\src\\contexts\\appContext.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":40,"column":6,"nodeType":"49","endLine":40,"endColumn":51,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":19,"nodeType":"53","messageId":"54","endLine":6,"endColumn":28},{"ruleId":"51","severity":1,"message":"55","line":6,"column":40,"nodeType":"53","messageId":"54","endLine":6,"endColumn":51},{"ruleId":"56","severity":1,"message":"57","line":25,"column":16,"nodeType":"58","messageId":"59","endLine":45,"endColumn":6},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomizeArray'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'setValues' is assigned a value but never used.","Identifier","unusedVar","'setSettings' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'comparedItems', 'comparedItems', 'comparedItems', 'comparedItems', 'comparedItems'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [settings.randomizeArray, settings.arraySize, randomizeArray]",{"range":"65","text":"66"},[1189,1234],"[settings.randomizeArray, settings.arraySize, randomizeArray]"]